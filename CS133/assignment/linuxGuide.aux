\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\citation{redirectingIO}
\@writefile{toc}{\contentsline {section}{\numberline {1}I/O Streams}{1}{section.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1}I/O Uses in UNIX}{1}{subsection.1.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2}I/O Redirection}{2}{subsection.1.2}}
\newlabel{Using the Pipe Command}{{1.2}{2}{I/O Redirection}{subsection.1.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces An example of stdin/stdout redirection with the pipe command.}}{2}{figure.1}}
\newlabel{Redirecting stdout to write files}{{1.2}{2}{I/O Redirection}{figure.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces An example of stdin/stdout redirection with the \textbf  {\textgreater } command.}}{2}{figure.2}}
\citation{permScreenshot1}
\newlabel{Nesting and combining Standard I/O commands}{{1.2}{3}{I/O Redirection}{figure.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Combining and nesting I/O redirection commands.}}{3}{figure.3}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Linux Filesystem Permissions}{3}{section.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Understanding the permissions system on linux}{3}{subsection.2.1}}
\newlabel{perm1}{{2.1}{3}{Understanding the permissions system on linux}{subsection.2.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Sample output for the \textbf  {ls -l} command illustrating linux file permissions.}}{3}{figure.4}}
\citation{permValues}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Changing permissions on linux}{4}{subsection.2.2}}
\newlabel{perms2}{{2.2}{4}{Changing permissions on linux}{subsection.2.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces Simple alteration of filesystem permissions on linux with the \textbf  {chmod} command.}}{4}{figure.5}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.2.1}Using numerical values to assign permissions}{4}{subsubsection.2.2.1}}
\newlabel{perms3}{{2.2.1}{5}{Using numerical values to assign permissions}{subsubsection.2.2.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces Permission numerical values.}}{5}{figure.6}}
\newlabel{perms4}{{2.2.1}{5}{Using numerical values to assign permissions}{figure.6}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces Assigning permissions directly with chmod.}}{5}{figure.7}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Bash Scripting}{5}{section.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}Declaring variables in Bash}{5}{subsection.3.1}}
\newlabel{bash1}{{3.1}{5}{Declaring variables in Bash}{subsection.3.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces An example of variable declaration and usage.}}{5}{figure.8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}Whitespace in Bash}{5}{subsection.3.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3}IF Statements in Bash}{6}{subsection.3.3}}
\newlabel{bash2}{{3.3}{6}{IF Statements in Bash}{subsection.3.3}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {9}{\ignorespaces Declaring an IF Statement in Bash}}{6}{figure.9}}
\newlabel{bash3}{{3.3}{7}{IF Statements in Bash}{figure.9}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {10}{\ignorespaces Declaring an IF Statement in Bash with more familiar syntax.}}{7}{figure.10}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4}FOR Loops in Bash}{7}{subsection.3.4}}
\newlabel{bash4}{{3.4}{7}{FOR Loops in Bash}{subsection.3.4}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {11}{\ignorespaces A useful but simple use of \textbf  {FOR} in Bash.}}{7}{figure.11}}
\newlabel{bash5}{{3.4}{7}{FOR Loops in Bash}{lstnumber.-5.4}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {12}{\ignorespaces A more traditional for loop syntax in Bash.}}{7}{figure.12}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.5}Arrays in Bash}{7}{subsection.3.5}}
\newlabel{bash6}{{3.5}{8}{Arrays in Bash}{lstnumber.-6.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {13}{\ignorespaces One way to declare an array in Bash.}}{8}{figure.13}}
\newlabel{bash7}{{3.5}{8}{Arrays in Bash}{lstnumber.-7.7}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {14}{\ignorespaces Looping through an indexed array in Bash.}}{8}{figure.14}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.6}Functions in Bash}{8}{subsection.3.6}}
\newlabel{func1}{{3.6}{8}{Functions in Bash}{lstnumber.-8.3}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {15}{\ignorespaces Declaring a function in Bash.}}{8}{figure.15}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.7}Variable scope in Bash}{8}{subsection.3.7}}
\bibstyle{ieeetr}
\bibdata{linuxGuideBibliography}
\bibcite{redirectingIO}{1}
\bibcite{permScreenshot1}{2}
\bibcite{permValues}{3}
\newlabel{func2}{{3.6}{9}{Functions in Bash}{lstnumber.-9.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {16}{\ignorespaces Saving the result of a function.}}{9}{figure.16}}
